{"name":"TCR data parser","tagline":"Processing of Traffic Count Editor (TCE)  pdf reports using Python 2.7 ","body":"# Overview\r\nThe TCR data parser takes data from PDF Traffic Count Reports and exports key data points into an excel format, eliminating the need to manually transpose values.\r\n\r\n###Traffic Counts\r\nMany New York State Metropolitan Planning Organizations perform traffic counts and use the data to assess transportation needs, measure system performance, assist with road planning and design, and prioritize project funding.  Data is also utilized by businesses and the general public.  \r\n\r\nNYSDOT uses and provides a custom developed software called Traffic Count Editor (TCE) to facilitate the traffic count data quality control process.  The TCE software and configuration files are available on the [NYSDOT Highway Data Services Bureau website](https://www.dot.ny.gov/highway-data-services) under software.\r\n\r\n### The Problem \r\nThe software produces Traffic Count Reports in a standard format, but the reports cannot be exported into any format and must instead be printed.  To supply and publish the data, reports are typically \"printed to pdf\" to save the report as a pdf.  There is no way to directly export any of the commonly sought after fields (AADT, Average for a particular hour) in the report, forcing those interested in the data to have to manually transpose the data from a pdf into a more usable format.  Many agencies that maintain traffic count databases have to manually extract data from hundreds of pdfs each year.\r\n  \r\n### Features\r\nThe program creates an Excel workbook and then populates it with the following information taken from the pdf reports:\r\n    \r\n    Station, Date, Road_Name, From, To, Municipality, Year, AADT_1, AADT_2, User defined Peak Hour(s)_1, User defined Peak Hour(s)_2, Dir_1, Dir_2\r\n\r\n\r\n### Requirements\r\nThe program is written for python 2.7.x (not 3) and requires [XlsxWriter](https://github.com/jmcnamara/XlsxWriter) and [pdfquery](https://github.com/jcushman/pdfquery) modules to be installed.\r\n\r\nPython 2.7 is included with most ArcGIS installations v 10.1 or greater.\r\n\r\n### Installation\r\nCurrently very rudimentary\r\n####If you have ArcGIS installed:\r\n***\r\n\r\nInstall easy_install\r\n\r\nSave ez_setup.py from [this link](https://bootstrap.pypa.io/ez_setup.py) to: \r\n\r\n    C:\\Python27\\ArcGIS10.x\\Scripts\r\n\r\nNavigate to C:\\Python27\\ArcGIS10.x\\Scripts\r\n\r\nHold Shift and Right click in the directory and select \"Open command window here\"\r\n\r\nIn the now open command prompt type:\r\n\r\n    python ez_setup.py\r\n\r\nHit enter\r\n\r\nOnce installed type the following into the command prompt:\r\n    \r\n    easy_install XlsxWriter\r\n\r\nHit enter\r\n\r\nOnce installed type the following into the command prompt:\r\n\r\n    easy_install pdfquery\r\n\r\nHit enter\r\n\r\n####If you have installed python 2.7.x directly, use easy_install to install the required modules as described above\r\n    easy_install XlsxWriter\r\nand\r\n    \r\n    easy_install pdfquery\r\n\r\n### Running the program\r\nAfter installing all the required components, download the [pdf_read.py](https://github.com/dhstaas/TCR_Data_Parsing_27/pdf_read.pdf) program and save to wherever you want\r\n\r\nYou can run the script through the python editor, IDLE, which will also allow you to paste the count directory instead of typing it out with the added bonus of seeing the source code:\r\n\r\n\tStart -> All Programs -> ArcGIS -> Python 2.7 -> IDLE(Python GUI)\r\n\tOnce in IDLE select File-> Open and navigate to the pdf_read.py file\r\n\tIn the new window with the source code select Run -> Run Module\r\n\r\nYou should also  be able to run the script by double clicking on it but you will have to type in the directory rather than being able to paste it. \r\n\r\nThe program will prompt you for the directory where your counts are stored (eg. S:\\2015 Count Data\\PDF Reports\\Volume)\r\n\r\nYou can then specify what hourly range to extract the average weekday hourly count from.\r\n\r\n**Disclaimer: This feature has not been perfected and may not work for all hourly ranges as expected.**\r\n\r\nIt will then prompt for the name of the Excel file you want to create (eg. 2015_AADT_Report) and begin to read the count reports.\r\nOnce completed the program will save an Excel workbook to the count directory and then open the file.\r\n\r\n### Authors and Contributors\r\nCreated by David Staas (@dhstaas)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}